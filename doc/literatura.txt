1.Gameplay który całkiem nieźle wyjasnia mechaniki gry
https://www.youtube.com/watch?v=OBeFUandEO4&list=PLWbAUhvm4h-MntfKhK5SvvtBx5lD8iv7V ##Link do playlisty

2.Framework w pythonie do systemów agentowych
https://www.youtube.com/watch?v=xaAzALyP6Ss
Krótka prezentacja działania, polecam odpalić na 1.5 prędkości. Najciekawsze jest od ok. 3 minuty, gdzie działa model odpalony w przeglądarce.

https://mesa.readthedocs.io/en/master/tutorials/intro_tutorial.html
Oficialny tutorial, wszyscy powinniśmy go przeczytać i przeanalizować (być może nawet nawet napisać taką prostą symulację jak jest w przykładzie). Pokazuje założenia i działanie tej biblioteki, jak stworzyć model symulacji oraz klasę dla agentów, a także najważniejszą metodę - step(), która będzie uruchamiana za każdym "tickiem" naszej symulacji oraz w jaki sposób ją uruchamiać.
Ponadto można tam się dowiedzieć jak zbierać dane, rysować wykresy, a także przedstawić przestrzeń i naszych agentów (można ich umieszczać w komórkach siatki albo pozwolić im poruszać się dowolnie)

https://towardsdatascience.com/introduction-to-mesa-agent-based-modeling-in-python-bcb0596e1c9a
Jest tutaj wyjaśnione jak zainstalować wszystko i uruchomić program demonstracyjny. Myślę, że jeśli przeanalizujemy kod i poszukamy dokumentacji, będziemy mogli użyć tego do naszej symulacji.

3.Gościu, który pisał Age of Empires opowiada o poruszaniu się jednostek
https://www.gamasutra.com/view/feature/3313/coordinated_unit_movement.php?print=1
https://www.gamasutra.com/view/feature/3314/coordinated_unit_movement.php?print=1

Jednym z problemów stworzenia dobrej symulacji ruchu jednostek jest odpowiednie 
dobranie mocy jaką komputer musi na nią poświęcić a dokładnością i inteligencją 
ruchu tych jednostek. Przyspieszanie, zwalnianie i obracanie się znacznie komplikują 
i spowalniają obliczenia przez co należy to zakodować z jak najwięszką optymalnością. 
W punkcie "Listing 1" jest przedsatwiony algorytm tzw. "pathfinding'u" dla jednej jednostki. 
Przy pisaniu kodu opisującego ruch wielu jednostek jednocześnie należy zwrócic uwagę m.in. 
na znaleźeniu optymalnej trasy, przewidywaniu kolejnej pozycji każej jednostki, system kolizji, 
różną szybkość różnych jednostek.  

4.Game AI Pro 360: Guide to Movement and Pathfinding (z google books)
https://bit.ly/2UMqEjt
